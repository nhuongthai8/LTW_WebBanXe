#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nhom2_WebsiteBanXe.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebBanXe")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertXe(Xe instance);
    partial void UpdateXe(Xe instance);
    partial void DeleteXe(Xe instance);
    partial void InsertChiTietOrder(ChiTietOrder instance);
    partial void UpdateChiTietOrder(ChiTietOrder instance);
    partial void DeleteChiTietOrder(ChiTietOrder instance);
    partial void InsertHangXe(HangXe instance);
    partial void UpdateHangXe(HangXe instance);
    partial void DeleteHangXe(HangXe instance);
    partial void InsertKhachHang(KhachHang instance);
    partial void UpdateKhachHang(KhachHang instance);
    partial void DeleteKhachHang(KhachHang instance);
    partial void InsertLoaiXe(LoaiXe instance);
    partial void UpdateLoaiXe(LoaiXe instance);
    partial void DeleteLoaiXe(LoaiXe instance);
    partial void InsertOrder(Order instance);
    partial void UpdateOrder(Order instance);
    partial void DeleteOrder(Order instance);
    partial void InsertLienHe(LienHe instance);
    partial void UpdateLienHe(LienHe instance);
    partial void DeleteLienHe(LienHe instance);
    partial void InsertTheLoaiTin(TheLoaiTin instance);
    partial void UpdateTheLoaiTin(TheLoaiTin instance);
    partial void DeleteTheLoaiTin(TheLoaiTin instance);
    partial void InsertTinTuc(TinTuc instance);
    partial void UpdateTinTuc(TinTuc instance);
    partial void DeleteTinTuc(TinTuc instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebBanXeConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Xe> Xes
		{
			get
			{
				return this.GetTable<Xe>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietOrder> ChiTietOrders
		{
			get
			{
				return this.GetTable<ChiTietOrder>();
			}
		}
		
		public System.Data.Linq.Table<HangXe> HangXes
		{
			get
			{
				return this.GetTable<HangXe>();
			}
		}
		
		public System.Data.Linq.Table<KhachHang> KhachHangs
		{
			get
			{
				return this.GetTable<KhachHang>();
			}
		}
		
		public System.Data.Linq.Table<LoaiXe> LoaiXes
		{
			get
			{
				return this.GetTable<LoaiXe>();
			}
		}
		
		public System.Data.Linq.Table<Order> Orders
		{
			get
			{
				return this.GetTable<Order>();
			}
		}
		
		public System.Data.Linq.Table<LienHe> LienHes
		{
			get
			{
				return this.GetTable<LienHe>();
			}
		}
		
		public System.Data.Linq.Table<TheLoaiTin> TheLoaiTins
		{
			get
			{
				return this.GetTable<TheLoaiTin>();
			}
		}
		
		public System.Data.Linq.Table<TinTuc> TinTucs
		{
			get
			{
				return this.GetTable<TinTuc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _tkAdmin;
		
		private string _passAdmin;
		
		private string _HoTen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntkAdminChanging(string value);
    partial void OntkAdminChanged();
    partial void OnpassAdminChanging(string value);
    partial void OnpassAdminChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    #endregion
		
		public Admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tkAdmin", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string tkAdmin
		{
			get
			{
				return this._tkAdmin;
			}
			set
			{
				if ((this._tkAdmin != value))
				{
					this.OntkAdminChanging(value);
					this.SendPropertyChanging();
					this._tkAdmin = value;
					this.SendPropertyChanged("tkAdmin");
					this.OntkAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passAdmin", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string passAdmin
		{
			get
			{
				return this._passAdmin;
			}
			set
			{
				if ((this._passAdmin != value))
				{
					this.OnpassAdminChanging(value);
					this.SendPropertyChanging();
					this._passAdmin = value;
					this.SendPropertyChanged("passAdmin");
					this.OnpassAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Xe")]
	public partial class Xe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idXe;
		
		private System.Nullable<int> _idLoaiXe;
		
		private System.Nullable<int> _idHangXe;
		
		private string _TenXe;
		
		private System.Nullable<decimal> _GiaTien;
		
		private string _Anhbia;
		
		private string _NoiDung;
		
		private string _NamSanXuat;
		
		private string _TinhTrangXe;
		
		private System.Nullable<System.DateTime> _NgayNhap;
		
		private System.Nullable<int> _SoLuongTon;
		
		private EntitySet<ChiTietOrder> _ChiTietOrders;
		
		private EntityRef<HangXe> _HangXe;
		
		private EntityRef<LoaiXe> _LoaiXe;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidXeChanging(int value);
    partial void OnidXeChanged();
    partial void OnidLoaiXeChanging(System.Nullable<int> value);
    partial void OnidLoaiXeChanged();
    partial void OnidHangXeChanging(System.Nullable<int> value);
    partial void OnidHangXeChanged();
    partial void OnTenXeChanging(string value);
    partial void OnTenXeChanged();
    partial void OnGiaTienChanging(System.Nullable<decimal> value);
    partial void OnGiaTienChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnNamSanXuatChanging(string value);
    partial void OnNamSanXuatChanged();
    partial void OnTinhTrangXeChanging(string value);
    partial void OnTinhTrangXeChanged();
    partial void OnNgayNhapChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayNhapChanged();
    partial void OnSoLuongTonChanging(System.Nullable<int> value);
    partial void OnSoLuongTonChanged();
    #endregion
		
		public Xe()
		{
			this._ChiTietOrders = new EntitySet<ChiTietOrder>(new Action<ChiTietOrder>(this.attach_ChiTietOrders), new Action<ChiTietOrder>(this.detach_ChiTietOrders));
			this._HangXe = default(EntityRef<HangXe>);
			this._LoaiXe = default(EntityRef<LoaiXe>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idXe
		{
			get
			{
				return this._idXe;
			}
			set
			{
				if ((this._idXe != value))
				{
					this.OnidXeChanging(value);
					this.SendPropertyChanging();
					this._idXe = value;
					this.SendPropertyChanged("idXe");
					this.OnidXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoaiXe", DbType="Int")]
		public System.Nullable<int> idLoaiXe
		{
			get
			{
				return this._idLoaiXe;
			}
			set
			{
				if ((this._idLoaiXe != value))
				{
					if (this._LoaiXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._idLoaiXe = value;
					this.SendPropertyChanged("idLoaiXe");
					this.OnidLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHangXe", DbType="Int")]
		public System.Nullable<int> idHangXe
		{
			get
			{
				return this._idHangXe;
			}
			set
			{
				if ((this._idHangXe != value))
				{
					if (this._HangXe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidHangXeChanging(value);
					this.SendPropertyChanging();
					this._idHangXe = value;
					this.SendPropertyChanged("idHangXe");
					this.OnidHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenXe", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenXe
		{
			get
			{
				return this._TenXe;
			}
			set
			{
				if ((this._TenXe != value))
				{
					this.OnTenXeChanging(value);
					this.SendPropertyChanging();
					this._TenXe = value;
					this.SendPropertyChanged("TenXe");
					this.OnTenXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaTien", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> GiaTien
		{
			get
			{
				return this._GiaTien;
			}
			set
			{
				if ((this._GiaTien != value))
				{
					this.OnGiaTienChanging(value);
					this.SendPropertyChanging();
					this._GiaTien = value;
					this.SendPropertyChanged("GiaTien");
					this.OnGiaTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="VarChar(50)")]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamSanXuat", DbType="VarChar(4)")]
		public string NamSanXuat
		{
			get
			{
				return this._NamSanXuat;
			}
			set
			{
				if ((this._NamSanXuat != value))
				{
					this.OnNamSanXuatChanging(value);
					this.SendPropertyChanging();
					this._NamSanXuat = value;
					this.SendPropertyChanged("NamSanXuat");
					this.OnNamSanXuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangXe", DbType="NVarChar(20)")]
		public string TinhTrangXe
		{
			get
			{
				return this._TinhTrangXe;
			}
			set
			{
				if ((this._TinhTrangXe != value))
				{
					this.OnTinhTrangXeChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangXe = value;
					this.SendPropertyChanged("TinhTrangXe");
					this.OnTinhTrangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayNhap", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayNhap
		{
			get
			{
				return this._NgayNhap;
			}
			set
			{
				if ((this._NgayNhap != value))
				{
					this.OnNgayNhapChanging(value);
					this.SendPropertyChanging();
					this._NgayNhap = value;
					this.SendPropertyChanged("NgayNhap");
					this.OnNgayNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongTon", DbType="Int")]
		public System.Nullable<int> SoLuongTon
		{
			get
			{
				return this._SoLuongTon;
			}
			set
			{
				if ((this._SoLuongTon != value))
				{
					this.OnSoLuongTonChanging(value);
					this.SendPropertyChanging();
					this._SoLuongTon = value;
					this.SendPropertyChanged("SoLuongTon");
					this.OnSoLuongTonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_ChiTietOrder", Storage="_ChiTietOrders", ThisKey="idXe", OtherKey="idXe")]
		public EntitySet<ChiTietOrder> ChiTietOrders
		{
			get
			{
				return this._ChiTietOrders;
			}
			set
			{
				this._ChiTietOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_Xe", Storage="_HangXe", ThisKey="idHangXe", OtherKey="idHangXe", IsForeignKey=true)]
		public HangXe HangXe
		{
			get
			{
				return this._HangXe.Entity;
			}
			set
			{
				HangXe previousValue = this._HangXe.Entity;
				if (((previousValue != value) 
							|| (this._HangXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HangXe.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._HangXe.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._idHangXe = value.idHangXe;
					}
					else
					{
						this._idHangXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("HangXe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiXe_Xe", Storage="_LoaiXe", ThisKey="idLoaiXe", OtherKey="idLoaiXe", IsForeignKey=true)]
		public LoaiXe LoaiXe
		{
			get
			{
				return this._LoaiXe.Entity;
			}
			set
			{
				LoaiXe previousValue = this._LoaiXe.Entity;
				if (((previousValue != value) 
							|| (this._LoaiXe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiXe.Entity = null;
						previousValue.Xes.Remove(this);
					}
					this._LoaiXe.Entity = value;
					if ((value != null))
					{
						value.Xes.Add(this);
						this._idLoaiXe = value.idLoaiXe;
					}
					else
					{
						this._idLoaiXe = default(Nullable<int>);
					}
					this.SendPropertyChanged("LoaiXe");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietOrders(ChiTietOrder entity)
		{
			this.SendPropertyChanging();
			entity.Xe = this;
		}
		
		private void detach_ChiTietOrders(ChiTietOrder entity)
		{
			this.SendPropertyChanging();
			entity.Xe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietOrders")]
	public partial class ChiTietOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idXe;
		
		private int _MaOrder;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<decimal> _DonGia;
		
		private EntityRef<Xe> _Xe;
		
		private EntityRef<Order> _Order;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidXeChanging(int value);
    partial void OnidXeChanged();
    partial void OnMaOrderChanging(int value);
    partial void OnMaOrderChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnDonGiaChanging(System.Nullable<decimal> value);
    partial void OnDonGiaChanged();
    #endregion
		
		public ChiTietOrder()
		{
			this._Xe = default(EntityRef<Xe>);
			this._Order = default(EntityRef<Order>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idXe", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idXe
		{
			get
			{
				return this._idXe;
			}
			set
			{
				if ((this._idXe != value))
				{
					if (this._Xe.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidXeChanging(value);
					this.SendPropertyChanging();
					this._idXe = value;
					this.SendPropertyChanged("idXe");
					this.OnidXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaOrder", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaOrder
		{
			get
			{
				return this._MaOrder;
			}
			set
			{
				if ((this._MaOrder != value))
				{
					if (this._Order.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaOrderChanging(value);
					this.SendPropertyChanging();
					this._MaOrder = value;
					this.SendPropertyChanged("MaOrder");
					this.OnMaOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonGia", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> DonGia
		{
			get
			{
				return this._DonGia;
			}
			set
			{
				if ((this._DonGia != value))
				{
					this.OnDonGiaChanging(value);
					this.SendPropertyChanging();
					this._DonGia = value;
					this.SendPropertyChanged("DonGia");
					this.OnDonGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Xe_ChiTietOrder", Storage="_Xe", ThisKey="idXe", OtherKey="idXe", IsForeignKey=true)]
		public Xe Xe
		{
			get
			{
				return this._Xe.Entity;
			}
			set
			{
				Xe previousValue = this._Xe.Entity;
				if (((previousValue != value) 
							|| (this._Xe.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Xe.Entity = null;
						previousValue.ChiTietOrders.Remove(this);
					}
					this._Xe.Entity = value;
					if ((value != null))
					{
						value.ChiTietOrders.Add(this);
						this._idXe = value.idXe;
					}
					else
					{
						this._idXe = default(int);
					}
					this.SendPropertyChanged("Xe");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ChiTietOrder", Storage="_Order", ThisKey="MaOrder", OtherKey="MaOrder", IsForeignKey=true)]
		public Order Order
		{
			get
			{
				return this._Order.Entity;
			}
			set
			{
				Order previousValue = this._Order.Entity;
				if (((previousValue != value) 
							|| (this._Order.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Order.Entity = null;
						previousValue.ChiTietOrders.Remove(this);
					}
					this._Order.Entity = value;
					if ((value != null))
					{
						value.ChiTietOrders.Add(this);
						this._MaOrder = value.MaOrder;
					}
					else
					{
						this._MaOrder = default(int);
					}
					this.SendPropertyChanged("Order");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HangXe")]
	public partial class HangXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idHangXe;
		
		private string _TenHangXe;
		
		private string _SDT;
		
		private string _NamThanhLap;
		
		private string _DiaChi;
		
		private string _eMail;
		
		private EntitySet<Xe> _Xes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidHangXeChanging(int value);
    partial void OnidHangXeChanged();
    partial void OnTenHangXeChanging(string value);
    partial void OnTenHangXeChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnNamThanhLapChanging(string value);
    partial void OnNamThanhLapChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OneMailChanging(string value);
    partial void OneMailChanged();
    #endregion
		
		public HangXe()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idHangXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idHangXe
		{
			get
			{
				return this._idHangXe;
			}
			set
			{
				if ((this._idHangXe != value))
				{
					this.OnidHangXeChanging(value);
					this.SendPropertyChanging();
					this._idHangXe = value;
					this.SendPropertyChanged("idHangXe");
					this.OnidHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenHangXe", DbType="NVarChar(50)")]
		public string TenHangXe
		{
			get
			{
				return this._TenHangXe;
			}
			set
			{
				if ((this._TenHangXe != value))
				{
					this.OnTenHangXeChanging(value);
					this.SendPropertyChanging();
					this._TenHangXe = value;
					this.SendPropertyChanged("TenHangXe");
					this.OnTenHangXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NamThanhLap", DbType="VarChar(4)")]
		public string NamThanhLap
		{
			get
			{
				return this._NamThanhLap;
			}
			set
			{
				if ((this._NamThanhLap != value))
				{
					this.OnNamThanhLapChanging(value);
					this.SendPropertyChanging();
					this._NamThanhLap = value;
					this.SendPropertyChanged("NamThanhLap");
					this.OnNamThanhLapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eMail", DbType="VarChar(50)")]
		public string eMail
		{
			get
			{
				return this._eMail;
			}
			set
			{
				if ((this._eMail != value))
				{
					this.OneMailChanging(value);
					this.SendPropertyChanging();
					this._eMail = value;
					this.SendPropertyChanged("eMail");
					this.OneMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HangXe_Xe", Storage="_Xes", ThisKey="idHangXe", OtherKey="idHangXe")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.HangXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachHang")]
	public partial class KhachHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKH;
		
		private string _HoTen;
		
		private string _GioiTinh;
		
		private System.Nullable<System.DateTime> _NgaySinh;
		
		private string _SDT;
		
		private string _DiaChi;
		
		private string _eMail;
		
		private string _TaiKhoan;
		
		private string _MatKhau;
		
		private EntitySet<Order> _Orders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(int value);
    partial void OnMaKHChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnGioiTinhChanging(string value);
    partial void OnGioiTinhChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OneMailChanging(string value);
    partial void OneMailChanged();
    partial void OnTaiKhoanChanging(string value);
    partial void OnTaiKhoanChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    #endregion
		
		public KhachHang()
		{
			this._Orders = new EntitySet<Order>(new Action<Order>(this.attach_Orders), new Action<Order>(this.detach_Orders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="NVarChar(10)")]
		public string GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgaySinh
		{
			get
			{
				return this._NgaySinh;
			}
			set
			{
				if ((this._NgaySinh != value))
				{
					this.OnNgaySinhChanging(value);
					this.SendPropertyChanging();
					this._NgaySinh = value;
					this.SendPropertyChanged("NgaySinh");
					this.OnNgaySinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="VarChar(11)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eMail", DbType="VarChar(50)")]
		public string eMail
		{
			get
			{
				return this._eMail;
			}
			set
			{
				if ((this._eMail != value))
				{
					this.OneMailChanging(value);
					this.SendPropertyChanging();
					this._eMail = value;
					this.SendPropertyChanged("eMail");
					this.OneMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaiKhoan", DbType="VarChar(50)")]
		public string TaiKhoan
		{
			get
			{
				return this._TaiKhoan;
			}
			set
			{
				if ((this._TaiKhoan != value))
				{
					this.OnTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._TaiKhoan = value;
					this.SendPropertyChanged("TaiKhoan");
					this.OnTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_Order", Storage="_Orders", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<Order> Orders
		{
			get
			{
				return this._Orders;
			}
			set
			{
				this._Orders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = this;
		}
		
		private void detach_Orders(Order entity)
		{
			this.SendPropertyChanging();
			entity.KhachHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiXe")]
	public partial class LoaiXe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLoaiXe;
		
		private string _TenLoai;
		
		private EntitySet<Xe> _Xes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLoaiXeChanging(int value);
    partial void OnidLoaiXeChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public LoaiXe()
		{
			this._Xes = new EntitySet<Xe>(new Action<Xe>(this.attach_Xes), new Action<Xe>(this.detach_Xes));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoaiXe", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLoaiXe
		{
			get
			{
				return this._idLoaiXe;
			}
			set
			{
				if ((this._idLoaiXe != value))
				{
					this.OnidLoaiXeChanging(value);
					this.SendPropertyChanging();
					this._idLoaiXe = value;
					this.SendPropertyChanged("idLoaiXe");
					this.OnidLoaiXeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiXe_Xe", Storage="_Xes", ThisKey="idLoaiXe", OtherKey="idLoaiXe")]
		public EntitySet<Xe> Xes
		{
			get
			{
				return this._Xes;
			}
			set
			{
				this._Xes.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiXe = this;
		}
		
		private void detach_Xes(Xe entity)
		{
			this.SendPropertyChanging();
			entity.LoaiXe = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Orders")]
	public partial class Order : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaOrder;
		
		private System.Nullable<int> _MaKH;
		
		private System.Nullable<System.DateTime> _NgayTao;
		
		private System.Nullable<System.DateTime> _NgayGiao;
		
		private System.Nullable<bool> _TinhTrangThanhToan;
		
		private System.Nullable<bool> _TinhTrangGH;
		
		private EntitySet<ChiTietOrder> _ChiTietOrders;
		
		private EntityRef<KhachHang> _KhachHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaOrderChanging(int value);
    partial void OnMaOrderChanged();
    partial void OnMaKHChanging(System.Nullable<int> value);
    partial void OnMaKHChanged();
    partial void OnNgayTaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTaoChanged();
    partial void OnNgayGiaoChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGiaoChanged();
    partial void OnTinhTrangThanhToanChanging(System.Nullable<bool> value);
    partial void OnTinhTrangThanhToanChanged();
    partial void OnTinhTrangGHChanging(System.Nullable<bool> value);
    partial void OnTinhTrangGHChanged();
    #endregion
		
		public Order()
		{
			this._ChiTietOrders = new EntitySet<ChiTietOrder>(new Action<ChiTietOrder>(this.attach_ChiTietOrders), new Action<ChiTietOrder>(this.detach_ChiTietOrders));
			this._KhachHang = default(EntityRef<KhachHang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaOrder", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaOrder
		{
			get
			{
				return this._MaOrder;
			}
			set
			{
				if ((this._MaOrder != value))
				{
					this.OnMaOrderChanging(value);
					this.SendPropertyChanging();
					this._MaOrder = value;
					this.SendPropertyChanged("MaOrder");
					this.OnMaOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="Int")]
		public System.Nullable<int> MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._KhachHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayTao
		{
			get
			{
				return this._NgayTao;
			}
			set
			{
				if ((this._NgayTao != value))
				{
					this.OnNgayTaoChanging(value);
					this.SendPropertyChanging();
					this._NgayTao = value;
					this.SendPropertyChanged("NgayTao");
					this.OnNgayTaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGiao", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGiao
		{
			get
			{
				return this._NgayGiao;
			}
			set
			{
				if ((this._NgayGiao != value))
				{
					this.OnNgayGiaoChanging(value);
					this.SendPropertyChanging();
					this._NgayGiao = value;
					this.SendPropertyChanged("NgayGiao");
					this.OnNgayGiaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangThanhToan", DbType="Bit")]
		public System.Nullable<bool> TinhTrangThanhToan
		{
			get
			{
				return this._TinhTrangThanhToan;
			}
			set
			{
				if ((this._TinhTrangThanhToan != value))
				{
					this.OnTinhTrangThanhToanChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangThanhToan = value;
					this.SendPropertyChanged("TinhTrangThanhToan");
					this.OnTinhTrangThanhToanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TinhTrangGH", DbType="Bit")]
		public System.Nullable<bool> TinhTrangGH
		{
			get
			{
				return this._TinhTrangGH;
			}
			set
			{
				if ((this._TinhTrangGH != value))
				{
					this.OnTinhTrangGHChanging(value);
					this.SendPropertyChanging();
					this._TinhTrangGH = value;
					this.SendPropertyChanged("TinhTrangGH");
					this.OnTinhTrangGHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Order_ChiTietOrder", Storage="_ChiTietOrders", ThisKey="MaOrder", OtherKey="MaOrder")]
		public EntitySet<ChiTietOrder> ChiTietOrders
		{
			get
			{
				return this._ChiTietOrders;
			}
			set
			{
				this._ChiTietOrders.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachHang_Order", Storage="_KhachHang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public KhachHang KhachHang
		{
			get
			{
				return this._KhachHang.Entity;
			}
			set
			{
				KhachHang previousValue = this._KhachHang.Entity;
				if (((previousValue != value) 
							|| (this._KhachHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachHang.Entity = null;
						previousValue.Orders.Remove(this);
					}
					this._KhachHang.Entity = value;
					if ((value != null))
					{
						value.Orders.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachHang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietOrders(ChiTietOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = this;
		}
		
		private void detach_ChiTietOrders(ChiTietOrder entity)
		{
			this.SendPropertyChanging();
			entity.Order = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LienHe")]
	public partial class LienHe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _HoTen;
		
		private string _eMail;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OneMailChanging(string value);
    partial void OneMailChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    #endregion
		
		public LienHe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eMail", DbType="NVarChar(50)")]
		public string eMail
		{
			get
			{
				return this._eMail;
			}
			set
			{
				if ((this._eMail != value))
				{
					this.OneMailChanging(value);
					this.SendPropertyChanging();
					this._eMail = value;
					this.SendPropertyChanged("eMail");
					this.OneMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TheLoaiTin")]
	public partial class TheLoaiTin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idLoai;
		
		private string _TenLoai;
		
		private EntitySet<TinTuc> _TinTucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidLoaiChanging(int value);
    partial void OnidLoaiChanged();
    partial void OnTenLoaiChanging(string value);
    partial void OnTenLoaiChanged();
    #endregion
		
		public TheLoaiTin()
		{
			this._TinTucs = new EntitySet<TinTuc>(new Action<TinTuc>(this.attach_TinTucs), new Action<TinTuc>(this.detach_TinTucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoai", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idLoai
		{
			get
			{
				return this._idLoai;
			}
			set
			{
				if ((this._idLoai != value))
				{
					this.OnidLoaiChanging(value);
					this.SendPropertyChanging();
					this._idLoai = value;
					this.SendPropertyChanged("idLoai");
					this.OnidLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoai", DbType="NVarChar(50)")]
		public string TenLoai
		{
			get
			{
				return this._TenLoai;
			}
			set
			{
				if ((this._TenLoai != value))
				{
					this.OnTenLoaiChanging(value);
					this.SendPropertyChanging();
					this._TenLoai = value;
					this.SendPropertyChanged("TenLoai");
					this.OnTenLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoaiTin_TinTuc", Storage="_TinTucs", ThisKey="idLoai", OtherKey="idLoai")]
		public EntitySet<TinTuc> TinTucs
		{
			get
			{
				return this._TinTucs;
			}
			set
			{
				this._TinTucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.TheLoaiTin = this;
		}
		
		private void detach_TinTucs(TinTuc entity)
		{
			this.SendPropertyChanging();
			entity.TheLoaiTin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinTuc")]
	public partial class TinTuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTT;
		
		private System.Nullable<int> _idLoai;
		
		private string _TieuDe;
		
		private string _NoiDung;
		
		private string _Anhbia;
		
		private EntityRef<TheLoaiTin> _TheLoaiTin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTTChanging(int value);
    partial void OnidTTChanged();
    partial void OnidLoaiChanging(System.Nullable<int> value);
    partial void OnidLoaiChanged();
    partial void OnTieuDeChanging(string value);
    partial void OnTieuDeChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    #endregion
		
		public TinTuc()
		{
			this._TheLoaiTin = default(EntityRef<TheLoaiTin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTT", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idTT
		{
			get
			{
				return this._idTT;
			}
			set
			{
				if ((this._idTT != value))
				{
					this.OnidTTChanging(value);
					this.SendPropertyChanging();
					this._idTT = value;
					this.SendPropertyChanged("idTT");
					this.OnidTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idLoai", DbType="Int")]
		public System.Nullable<int> idLoai
		{
			get
			{
				return this._idLoai;
			}
			set
			{
				if ((this._idLoai != value))
				{
					if (this._TheLoaiTin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidLoaiChanging(value);
					this.SendPropertyChanging();
					this._idLoai = value;
					this.SendPropertyChanged("idLoai");
					this.OnidLoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TieuDe", DbType="NVarChar(100)")]
		public string TieuDe
		{
			get
			{
				return this._TieuDe;
			}
			set
			{
				if ((this._TieuDe != value))
				{
					this.OnTieuDeChanging(value);
					this.SendPropertyChanging();
					this._TieuDe = value;
					this.SendPropertyChanged("TieuDe");
					this.OnTieuDeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(MAX)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="VarChar(50)")]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TheLoaiTin_TinTuc", Storage="_TheLoaiTin", ThisKey="idLoai", OtherKey="idLoai", IsForeignKey=true)]
		public TheLoaiTin TheLoaiTin
		{
			get
			{
				return this._TheLoaiTin.Entity;
			}
			set
			{
				TheLoaiTin previousValue = this._TheLoaiTin.Entity;
				if (((previousValue != value) 
							|| (this._TheLoaiTin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TheLoaiTin.Entity = null;
						previousValue.TinTucs.Remove(this);
					}
					this._TheLoaiTin.Entity = value;
					if ((value != null))
					{
						value.TinTucs.Add(this);
						this._idLoai = value.idLoai;
					}
					else
					{
						this._idLoai = default(Nullable<int>);
					}
					this.SendPropertyChanged("TheLoaiTin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
